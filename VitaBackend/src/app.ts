import express, { Request } from "express";
import cors from "cors";
import multer from "multer";
import { Properties, Property, PropertyBase } from "./types";

const { randomUUID } = require("crypto");

const app = express();
const port = 5000;

app.use(express.json());
app.use(cors());
// serve uploads folder, allowing frontend to request the images
app.use("/uploads", express.static(__dirname + "/../uploads"));

// middleware allowing us to save images to uploads folder
const upload = multer({ dest: "uploads/" });

const properties: Properties = {};

app.get("/properties", (req, res) => {
  try {
    const propertiesToReturn: Property[] = Object.keys(properties).map(
      (key) => ({
        uuid: key,
        ...properties[key],
      })
    );

    res.json(propertiesToReturn);
  } catch (error) {
    res.status(500).send({ error: "Something went wrong!" });
  }
});

app.post(
  "/properties",
  upload.single("image"),
  (req: Request<{}, {}, PropertyBase>, res) => {
    try {
      let uuid: string = randomUUID();

      while (uuid in properties) {
        uuid = randomUUID();
      }

      // store the properties by key, efficent access
      // store the filename generated by the middleware, this can then be sent to the frontend.
      properties[uuid] = { ...req.body, fileName: req?.file?.filename };

      // build the response object to include the key
      const updatedProperties: Property[] = Object.keys(properties).map(
        (key) => ({ uuid: key, ...properties[key] })
      );

      res.json(updatedProperties);
    } catch (error) {
      res.status(500).send({ error: "Something went wrong!" });
    }
  }
);

app.listen(port, () => console.log(`app listening on port: ${port}`));
